# This file makes 'royal_jelly' a Python package.

from .aggregate import Aggregate
from .connector import Connector
from .transformation import Transformation
from .event_bus import EventBus, IEventBus
from .sacred_codon import (
    SacredAggregate,
    SacredCommand,
    SacredCodonType,
    CodonValidationResult,
    create_sacred_command,
)
from .collaborative_validation import (
    CollaborativeValidator,
    CollaborativeValidationResult,
    ValidationFeedback,
    ValidationType,
    ValidationSeverity,
    JulesStyleValidator,
    HumeanSkepticValidator,
    EmpiricalValidator,
    create_validation_context,
)
from .immune_event_processor import (
    HiveAdaptationEngine,
    AdaptationEvent,
    AdaptationType,
    get_adaptation_engine,
    process_event_with_adaptation_engine,
    # Legacy compatibility (deprecated)
    ImmuneEventProcessor,
    MutationEvent,
    MutationType,
    get_immune_processor,
    process_event_with_immune_system,
)
from .evolutionary_sacred_codons import (
    EvolutionarySacredCodon,
    EvolutionaryPressure,
    CodonLifecycleStage,
    CodonFitnessMetric,
    CodonGeneticProfile,
    SymbioticRelationship,
    EcosystemNiche,
    demonstrate_evolutionary_sacred_codons,
)
from .enhanced_immune_system import (
    EnhancedHiveImmuneSystem,
    ImmuneResponseType,
    AntigenType,
    ImmunityStrength,
    ImmuneMemoryCell,
    SymbioticRelationshipRecord,
    AdaptiveImmuneResponse,
    demonstrate_enhanced_immune_system,
)
from .neural_event_brain import (
    HiveNeuralEventBrain,
    NeuronType,
    ActivationFunction,
    SynapticConnection,
    Neuron,
    NeuralRegion,
    get_hive_neural_brain,
    process_event_with_neural_brain,
    demonstrate_neural_event_processing,
)
from .chemical_periodic_system import (
    ChemicalElement,
    ChemicalFamily,
    BondType,
    ToxicityLevel,
    PeriodicTableSystem,
    get_periodic_table_system,
    analyze_component_chemistry,
    get_element_for_component,
)
from .chemical_bond_engine import (
    ChemicalBond,
    BondState,
    ChemicalReaction,
    ReactionType,
    ChemicalBondEngine,
    get_chemical_bond_engine,
    form_component_bond,
    analyze_chemical_network,
)
from .molecular_architecture import (
    SoftwareMolecule,
    MolecularGeometry,
    MolecularState,
    MolecularFunction,
    MolecularBond,
    MolecularArchitectureEngine,
    get_molecular_architecture_engine,
    create_software_molecule,
    analyze_molecular_system,
)
from .chemical_safety_monitor import (
    SafetyIncident,
    SafetyAlert,
    MonitoringArea,
    EmergencyProtocol,
    ChemicalSafetyMonitor,
    get_chemical_safety_monitor,
    perform_chemical_safety_scan,
    get_chemical_safety_dashboard,
)
from .quantum_component_states import (
    SuperpositionType,
    InterferencePattern,
    DecoherenceSource,
    QuantumBlochVector,
    QuantumInterference,
    DecoherenceModel,
    QuantumSuperpositionState,
    QuantumSuperpositionManager,
    get_quantum_superposition_manager,
    create_component_superposition,
    measure_component_superposition,
    evolve_quantum_superpositions,
    demonstrate_quantum_superposition_states,
)

__all__ = [
    "Aggregate",
    "SacredAggregate",
    "SacredCommand",
    "SacredCodonType",
    "CodonValidationResult",
    "create_sacred_command",
    "CollaborativeValidator",
    "CollaborativeValidationResult",
    "ValidationFeedback",
    "ValidationType",
    "ValidationSeverity",
    "JulesStyleValidator",
    "HumeanSkepticValidator",
    "EmpiricalValidator",
    "create_validation_context",
    "HiveAdaptationEngine",
    "AdaptationEvent",
    "AdaptationType",
    "get_adaptation_engine",
    "process_event_with_adaptation_engine",
    # Legacy compatibility (deprecated)
    "ImmuneEventProcessor",
    "MutationEvent",
    "MutationType",
    "get_immune_processor",
    "process_event_with_immune_system",
    # Enhanced evolutionary system
    "EvolutionarySacredCodon",
    "EvolutionaryPressure",
    "CodonLifecycleStage",
    "CodonFitnessMetric",
    "CodonGeneticProfile",
    "SymbioticRelationship",
    "EcosystemNiche",
    "demonstrate_evolutionary_sacred_codons",
    # Enhanced immune system
    "EnhancedHiveImmuneSystem",
    "ImmuneResponseType",
    "AntigenType",
    "ImmunityStrength",
    "ImmuneMemoryCell",
    "SymbioticRelationshipRecord",
    "AdaptiveImmuneResponse",
    "demonstrate_enhanced_immune_system",
    # Neural event brain
    "HiveNeuralEventBrain",
    "NeuronType",
    "ActivationFunction",
    "SynapticConnection",
    "Neuron",
    "NeuralRegion",
    "get_hive_neural_brain",
    "process_event_with_neural_brain",
    "demonstrate_neural_event_processing",
    # Chemical architecture
    "ChemicalElement",
    "ChemicalFamily",
    "BondType",
    "ToxicityLevel",
    "PeriodicTableSystem",
    "get_periodic_table_system",
    "analyze_component_chemistry",
    "get_element_for_component",
    "ChemicalBond",
    "BondState",
    "ChemicalReaction",
    "ReactionType",
    "ChemicalBondEngine",
    "get_chemical_bond_engine",
    "form_component_bond",
    "analyze_chemical_network",
    "SoftwareMolecule",
    "MolecularGeometry",
    "MolecularState",
    "MolecularFunction",
    "MolecularBond",
    "MolecularArchitectureEngine",
    "get_molecular_architecture_engine",
    "create_software_molecule",
    "analyze_molecular_system",
    "SafetyIncident",
    "SafetyAlert",
    "MonitoringArea",
    "EmergencyProtocol",
    "ChemicalSafetyMonitor",
    "get_chemical_safety_monitor",
    "perform_chemical_safety_scan",
    "get_chemical_safety_dashboard",
    # Quantum superposition states
    "SuperpositionType",
    "InterferencePattern",
    "DecoherenceSource",
    "QuantumBlochVector",
    "QuantumInterference",
    "DecoherenceModel",
    "QuantumSuperpositionState",
    "QuantumSuperpositionManager",
    "get_quantum_superposition_manager",
    "create_component_superposition",
    "measure_component_superposition",
    "evolve_quantum_superpositions",
    "demonstrate_quantum_superposition_states",
    "Connector",
    "Transformation",
    "IEventBus",
    "EventBus",
]
