# Generated by The Genesis Engine
# Connector for: {class_name}
from dataclasses import dataclass

@dataclass
class {data_class}:
    """Data Transfer Object for the {class_name} command."""
    {primary_key}: str
    # ... other fields for this command

class {class_name}:
    """A driving connector that handles the {data_class} command.
    It translates an external request into a domain command.
    """
    def __init__(self, service):
        self._service = service # An application service

    def handle_request(self, request_data: dict):
        print(f"Request for {{self.__class__.__name__}} received!")
        command = {data_class}(**request_data)
        # In a real app, this would call the application service
        # self._service.execute(command)
        print(f"  - Generated Command: {{command}}")
        return command
