# Generated by The Genesis Engine: G.py.tpl
from dataclasses import dataclass
from datetime import datetime
from uuid import uuid4

@dataclass
class {class_name}Event:
    """
    A Genesis Event representing that '{class_name}' has occurred.
    This class complies with the Pollen Protocol.
    """
    event_id: str
    event_type: str
    event_version: str
    timestamp: datetime
    aggregate_id: str
    payload: dict

    @classmethod
    def create(cls, aggregate_id: str, payload: dict) -> "{class_name}Event":
        """Factory method to create a new, compliant event."""
        return cls(
            event_id=str(uuid4()),
            event_type="{class_name}",
            event_version="1.0",
            timestamp=datetime.utcnow(),
            aggregate_id=aggregate_id,
            payload=payload
        )

    def __post_init__(self):
        # Example validation
        if not self.event_id or not self.aggregate_id:
            raise ValueError("Event ID and Aggregate ID are required.")
        print(f"  - Genesis Event created: {self.event_type} (ID: {self.event_id})")
