apiVersion: v1
kind: ConfigMap
metadata:
  name: quantum-hive-config
  namespace: quantum-hive
  labels:
    app: quantum-hive
    component: config
data:
  # Quantum Configuration
  quantum_coherence_target: "0.9"
  consciousness_level_target: "3"
  consciousness_tracking: "true"
  evolutionary_adaptation: "true"
  
  # Genetic Programming Configuration
  mutation_rate: "0.05"
  fitness_threshold: "0.8"
  max_generations: "100"
  population_size: "50"
  
  # Scaling Configuration
  max_replicas: "10"
  min_replicas: "2"
  cpu_threshold: "70"
  memory_threshold: "80"
  
  # Monitoring Configuration
  metrics_enabled: "true"
  quantum_monitoring: "true"
  chemical_bond_threshold: "5"
  
  # Production Configuration
  log_level: "INFO"
  debug_mode: "false"
  health_check_interval: "30"
  
  # Enterprise Integration
  enterprise_mode: "true"
  compliance_level: "soc2"
  audit_enabled: "true"
  
  # Application Configuration
  application.yaml: |
    quantum:
      hive:
        coherence:
          target: 0.9
          minimum: 0.7
          monitoring_interval: 10
        consciousness:
          levels: 6
          evolution_threshold: 0.1
          tracking_enabled: true
        genetic_programming:
          mutation:
            rate: 0.05
            types: [point, insertion, deletion, crossover, quantum_tunneling]
          fitness:
            evaluation_interval: 5
            threshold: 0.8
            multi_objective: true
          population:
            size: 50
            elite_retention: 0.1
        deployment:
          strategy: blue_green
          canary_percentage: 10
          rollback_threshold: 0.5
        monitoring:
          prometheus:
            enabled: true
            port: 9090
            scrape_interval: 15s
          grafana:
            enabled: true
            dashboard_auto_import: true
          alerts:
            coherence_degradation: 0.1
            consciousness_regression: 1
            genetic_fitness_decline: 0.1
        security:
          encryption:
            at_rest: true
            in_transit: true
          authentication:
            method: oauth2
            token_expiry: 3600
          authorization:
            rbac_enabled: true
            quantum_permissions: true
---
apiVersion: v1
kind: Secret
metadata:
  name: quantum-hive-secrets
  namespace: quantum-hive
  labels:
    app: quantum-hive
    component: secrets
type: Opaque
stringData:
  # Database credentials (example - replace with actual secrets)
  db_username: "quantum_admin"
  db_password: "REPLACE_WITH_ACTUAL_PASSWORD"
  
  # API Keys (example - replace with actual keys)
  quantum_api_key: "REPLACE_WITH_ACTUAL_API_KEY"
  monitoring_token: "REPLACE_WITH_ACTUAL_TOKEN"
  
  # TLS Certificates (example - replace with actual certs)
  tls_private_key: "REPLACE_WITH_ACTUAL_PRIVATE_KEY"
  tls_certificate: "REPLACE_WITH_ACTUAL_CERTIFICATE"
  
  # OAuth Configuration (example - replace with actual config)
  oauth_client_id: "REPLACE_WITH_OAUTH_CLIENT_ID"
  oauth_client_secret: "REPLACE_WITH_OAUTH_CLIENT_SECRET"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: quantum-hive-sa
  namespace: quantum-hive
  labels:
    app: quantum-hive
    component: serviceaccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: quantum-hive
  name: quantum-hive-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["extensions", "networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: quantum-hive-rolebinding
  namespace: quantum-hive
subjects:
- kind: ServiceAccount
  name: quantum-hive-sa
  namespace: quantum-hive
roleRef:
  kind: Role
  name: quantum-hive-role
  apiGroup: rbac.authorization.k8s.io